

$ cnpm install -g cnpm --registry=https://registry.npm.taobao.org


# 确保已经进入项目目录
# 确定已经有 package.json，没有就通过
1.cnpm init 
# 创建，直接一路回车就好，后面再来详细说里面的内容。
# 安装 webpack 依赖

2.cnpm install webpack --save-dev
# 简单的写法：-_-,缩写形式 
cnpm i webpack -D
# –save：模块名将被添加到dependencies，可以简化为参数-S。
# –save-dev: 模块名将被添加到devDependencies，可以简化为参数-D。
  


3.cnpm install babel-loader babel-preset-es2015 babel-preset-react --save-dev      
    这里安装了babel的主体和两个babel的preset, 什么是preset呢，你可以把preset看成一个包，里面有各种各样一系列的插件。
    babel-preset-es2015 es6语法包，有了这个，你的代码可以随意的使用es6的新特性啦，const,箭头操作符等信手拈来。
    babel-preset-react react语法包，这个包，是专门作为react的优化，让你在代码中可以使用React ES6 classes的写法，同时直接支持JSX语法格式

4.cnpm install css-loader style-loader --save-dev 解析css
5.cnpm install sass-loader node-sass --save-dev  解析saas     css预编译程序
6.cnpm install less-loader 解析 less
7.cnpm install url-loader --save-dev  解析url 如果不正确，请运行npm install file-loader -D，再进行尝试。

8.cnpm install jshint-loader --save-dev    自己的js是否符合jshint的规范

9.cnpm install html-webpack-plugin --save-dev   快速生成html


10.cnpm install react react-dom redux react-redux redux-form --save  


11.cnpm install babel-preset-react-hmre --save-dev
            这个preset里面其实包括两方面的东西：
            react-transform-hmr 用来实现上面所说的热加载。
            react-transform-catch-errors 用来捕获render里面的方法，并且直接展示在界面上。
            配置一下.babelrc

            {
            "presets": ["react", "es2015"],
            //在开发的时候才启用HMR和Catch Error
            "env": {
            "development": {
                "presets": ["react-hmre"]
            }
            }
            }
# 安装
12.cnpm install webpack-dev-server -g

运行webpack-dev-server。去浏览器查看试试效果吧！任意改变message中的值，可以看到浏览器会自动刷新。并且将改变的值展示在眼前。（有可能只在http://localhost:8080/webpack-dev-server/才会自动刷新

#初始化后一次型安装
cnpm install webpack babel-loader babel-preset-es2015 babel-preset-react css-loader style-loader sass-loader node-sass less-loader  url-loader  html-webpack-plugin  webpack-dev-server --save-dev  