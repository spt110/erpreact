{
  "name": "expose",
  "version": "0.1.4",
  "description": "Search modules and expose exports onto a given namespace.",
  "keywords": [
    "utilities",
    "utils",
    "export",
    "modules"
  ],
  "author": {
    "name": "Boden Russell",
    "email": "bodensemail@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bodenr/expose.git"
  },
  "main": "index",
  "engines": {
    "node": ">=0.6"
  },
  "scripts": {
    "test": "make test"
  },
  "directories": {
    "doc": "./doc"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "markdox": "*",
    "dox-foundation": "*"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/bodenr/expose.png)](http://travis-ci.org/bodenr/expose)\n# expose\n\nA [node.js](http://nodejs.org) module allowing you to search and\nexpose module `exports` onto a given namespace. This can be useful\nfor example if you want to organize functions in respective modules\n(js files) but expose all of them onto a single index module for \neasier consumability.\n\n## Installation\n\nInstall using `npm`:\n\n    $ npm install expose\n\n## Running the tests\n\nFrom the `expose` directory first install the dev dependencies:\n```\nnpm install\n```\n\nThen run the tests:\n```\nnpm test\n```\n\n## API Docs\n\nThe API docs are provided in html and md format and are located under\n`expose/docs/`. If you want to rebuild them for any reason, you can\nrun the following from the `expose` directory:\n```\nmake doc\n```\n\n## Usage\n\nThe `expose` module exports a single function, so the return value from\na `require(expose)` is the expose function itself.\n\n```\nvar expose = require('expose');\n```\n\nThe function accepts a single argument - an options style object to \nconfigure itself and tries to take sensible defaults when you \ndon't provide an option.\n\n### The following options are supported:\n\n`targets` - The target path(s) to expose. This can be a single path string\nor an `Array` of path strings. If `targets` is not specified, expose will\nlook for a `lib` or `src` directory under the module that `require`d it.\nIf neither of those are found under the `require`ing module's directory,\nit will look for them under the grandparent directory. Finally, if all\nelse fails expose will use `process.cwd()`.\n\n`grep` - The patterns which define path \ninclusions to expose. By default all files under the `targets` which \nend in `.js` will be exposed. A path is considered a match is any of\nthe `grep` expressions match the absolute path and none of the `ungrep`\nexpressions match.\n\n`ungrep` - The patterns which define\npath exlusions for expose. By default any subdirectory under `targets`\nwhich contains a `node_modules` dir will be excluded. A path is considered \na match is any of the `grep` expressions match the absolute path and \nnone of the `ungrep` expressions match.\n\n`scope` - The namespace scope to expose exports on. For example the callers\n`exports` object. If no `scope` is specified a plain JSON object will be\ncreated and returned.\n\n`recurse` - A `boolean` indicating if expose should recurse into subdirectories\nunder the `targets`. By default this is set to `true`.\n\n`fn` - A callback `Function` to invoke for each property imported during the\nexpose process. The callback is invoked with 3 arguments\nas follows `fn(module, propName, propVal)` where `module` is the\nstripped (no path or extension) name of the module being imported,\npropName` is the name of the property being imported and `propVal`\nis the actual value being imported.\n\n### Examples\n\nExpose all exports found in .js files under the current module's `./lib` dir\n(except those found under a /node_modules directory):\n```js\nexports = expose();\n```\n\nEquivalent to the above:\n```js\nexpose({scope: exports});\n```\n\nSame as above, but invoke the `echo` function for each property exposed:\n```js\nfunction echo(mod, name, val) {\n    console.log(\"Module name: \" + mod);\n    console.log(\"Property name: \" + name);\n    console.log(\"Property value: \" + val);\n};\nexpose({scope: exports, fn: echo});\n```\n\nExpose all exports in `.js` files under the current module's `lib` dir, \nbut don't recurse into sub-dirs:\n```js\nexports = expose({recurse: false});\n```\n\nExpose all exports in files ending in `a.js` under the current module's `lib` dir:\n```js\nexports = expose({grep: /a.js$/});\n```\n\nSame as above, but let `expose` create the `RegExp`:\n```js\nexports = expose({grep: 'a.js'});\n```\n\nExpose all exports for `.js` files under the current module's `lib` dir that don't \nend in `a.js`:\n```js\nexports = expose({ungrep: /a.js$/});\n```\n\nExpose all exports for `.js` file under specific sub-directories:\n```js\nexports = expose({targets: ['./test/defaults/lib/inc',\n                            './test/defaults/lib/node_modules'],\n                            ungrep: []});\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Boden Russell &lt;bodensemail@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "_id": "expose@0.1.4",
  "dist": {
    "shasum": "197aa807200f5114d01520a8ce6a4f42b7f9ba29",
    "tarball": "https://registry.npmjs.org/expose/-/expose-0.1.4.tgz"
  },
  "_npmVersion": "1.1.65",
  "_npmUser": {
    "name": "boden",
    "email": "bodensemail@gmail.com"
  },
  "maintainers": [
    {
      "name": "boden",
      "email": "bodensemail@gmail.com"
    }
  ],
  "_shasum": "197aa807200f5114d01520a8ce6a4f42b7f9ba29",
  "_resolved": "https://registry.npmjs.org/expose/-/expose-0.1.4.tgz",
  "_from": "expose@>=0.1.4 <0.2.0",
  "bugs": {
    "url": "https://github.com/bodenr/expose/issues"
  },
  "homepage": "https://github.com/bodenr/expose#readme"
}
